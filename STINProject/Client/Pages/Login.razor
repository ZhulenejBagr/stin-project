@page "/login"
@using System.ComponentModel.DataAnnotations;
@using STINProject.Client.Services;
@inject HttpClient Http
@inject SavedSessionService SessionService
@inject NavigationManager NavManager

<PageTitle>Login</PageTitle>

<Form Model="@model" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <Text Label="Uživatelské jméno" id="Username" Disabled="false" @bind-Value="model.Username" ValidationFor="() => model.Username" />
    <Password Label="Heslo" Disabled="false" @bind-Value="model.Password" ValidationFor="() => model.Password"></Password>
    <Button type="submit">Přihlásit se</Button>
</Form>

@if (SessionValid == true)
{
    <Alert Type="AlertType.Success">
        <AlertItem>
            <AlertText>Úspěšně přihlášeni</AlertText>
        </AlertItem>
    </Alert>
}
else if (SessionValid == false)
{
    <Alert Type="AlertType.Warning">
        <AlertItem>
            <AlertText>Špatné přihlašovací údaje</AlertText>
        </AlertItem>
    </Alert>
}

@code {
    private string route = "";
    private LoginModel model = new();
    private bool? SessionValid = null;

    private async void HandleSubmit()
    {
        route = $"Auth/Login/{model.Username}/{model.Password}";
        SessionService.SessionId = await Http.GetFromJsonAsync<Guid>(route);
        SessionValid = await SessionService.VerifySession();
        if (SessionValid == true)
        {
            NavManager.NavigateTo("/");
        }
        StateHasChanged();
    }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }

    public class LoginModel 
    {
        [Required(ErrorMessage = "Uživatelské jméno nemůže být prázdné")]
        public string? Username { get; set; }
        [Required(ErrorMessage = "Heslo nemůže být prázdné")]
        public string? Password { get; set; }
    }
}
